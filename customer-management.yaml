openapi: 3.0.0
info:
  version: 1.0.0
  title: Customer Management API
  description: API that uses a customer registration and management PT. XYZ Loan Apps
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://xyzloan.com/customermanagement-service/v1/
paths:
  /customer:
    get:
      tags:
        - Customer Management
      summary: Search 'Customer' by seacrh criteria.
      description: Search 'Customer' by seacrh criteria.
      operationId: findCustomer
      parameters:
        - name: filters
          in: query
          description: "Query parameter to specify search filters. Attribute filters are specified in the following way- 
            ?filters=[attributeName][operator][value].
            ex. 
            ?filters=state==sumatra;city==medan
          "
          schema:
            type: string
        - name: page
          in: query
          description: "Requested number of page"
          schema:
            type: string
        - name: limit
          in: query
          description: " Requested number of record to be provided in the response requested by client
            - Default value if not passed : 20
            - Maximum value supported 200"
          schema:
            type: string
        - name: sort
          in: query
          description: "Sort attribute
          ex. 
          sort=city&sort=DESC"
          schema:
            type: string
            
      responses:
        '200':
          description: Get Customer Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Customer Management
      summary: Creates a New Customer.
      description: Creates a New Customer.
      operationId: createCustomer
      requestBody:
        description: Loan to add to the customer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      parameters:
        - name: Token
          in: query
          description: Token Generation
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: Local of the client
          required: false
          schema:
            type: string

      responses:
        '201':
          description: Create Customer Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /customer/{id}:
    get:
      tags:
        - Customer Management
      summary: Retrieves a 'Customer' by identifier
      description: Retrieves a 'Customer' by identifier
      operationId: retrieveCustomer
      parameters:
        - name: id
          in: path
          description: ID of customer to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Retrieve Customer Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetail'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Customer Management
      summary: Updates partially a 'Customer' by identifier
      description: |
        Update partially a 'Customer' by identifier.
        
        Supported paths and corresponding operations for update elements
        
        - /firstname
        - /lastName
        - /phoneNumber
        - /gender
        - /dob
        - /address
        - /state
        - /city
        - /postalCode
        - /status
        - /password
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          description: ID of customer to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Retrieve Customer Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Customer:
      allOf:
        - $ref: '#/components/schemas/Customer'
        - type: object
          required:
            - customerId
            - firstName
            - lastname
            - phoneNumber
            - gender
            - dob
            - status

          properties:
            customerId:
              type: integer
              format: int64
            firstName:
              type: string
            lastName:
              type: string
            phoneNumber:
              type: string
            gender:
              type: string
            dob:
              type: string
            address:
              type: string
            state:
              type: string
            city:
              type: string
            postalCode:
              type: string
            status:
              type: string

    CreateCustomer:
      type: object
      required:
          - customerId
          - firstName
          - lastname
          - phoneNumber
          - gender
          - dob
          - status
      properties:
            firstName:
              type: string
            lastName:
              type: string
            phoneNumber:
              type: string
            gender:
              type: string
            dob:
              type: string
            address:
              type: string
            state:
              type: string
            city:
              type: string
            postalCode:
              type: string
            status:
              type: string
            document:
              type: array
              items:
                $ref: '#/components/schemas/CreateDocument'

    CustomerDetail:
      type: object
      required:
          - firstName
          - lastname
          - phoneNumber
          - gender
          - dob
          - status
      properties:
            customerId:
              type: integer
              format: int64
            firstName:
              type: string
            lastName:
              type: string
            phoneNumber:
              type: string
            gender:
              type: string
            dob:
              type: string
            address:
              type: string
            state:
              type: string
            city:
              type: string
            postalCode:
              type: string
            status:
              type: string
            document:
              type: array
              items:
                $ref: '#/components/schemas/CreateDocument'
            loan:
              type: array
              items:
                $ref: '#/components/schemas/Loan'
            loanProfile:
              type: array
              items:
                $ref: '#/components/schemas/LoanProfile'    
              
    CreateDocument:
      type: object
      required:
          - customerId
          - documentType
          - documentNumber
          - document
      properties:
            customerId:
              type: string
            documentType:
              type: string
            documentNumber:
              type: string
            document:
              type: string
            expiredDate:
              type: string
              
    Loan:
      type: object
      required:
          - loanId
          - loanTenor
          - loanAmount
          - orderDate
      properties:
            loanId:
              type: string
            loanProductType:
              type: string
            loanTenor:
              type: string
            loanAmount:
              type: string
            orderDate:
              type: string
            payment:
              type: array
              items:
                $ref: '#/components/schemas/Payment'
              
    Payment:
      type: object
      required:
          - paymentId
          - loanId
          - paymentAmount
          - paymentDate
      properties:
            paymentId:
              type: string
            loanId:
              type: string
            paymentAmount:
              type: string
            paymentDate:
              type: string
              
    LoanProfile:
      type: object
      required:
          - loanProfileId
          - maxAmount
          - maxTenor
          - status
      properties:
            loanProfileId:
              type: string
            maxAmount:
              type: string
            maxTenor:
              type: string
            status:
              type: string            
              
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
